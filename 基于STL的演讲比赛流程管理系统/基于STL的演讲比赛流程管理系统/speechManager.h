#pragma once
#include <iostream>
#include <vector>
#include <map>
#include "speeker.h"
#include <algorithm>
#include <deque>
#include <functional>
#include <numeric>
#include <string>
#include <fstream>
using namespace std;

class SpeechManager
{
public:
	// 构造函数
	SpeechManager();
	// 显示菜单
	void show_Menu();

	// 退出系统
	void exitSystem();

	// 初始化属性和容器
	void initSpeech();

	// 创建12名选手
	void createSpeaker();

	// 开始比赛，比赛流程控制
	void startSpeech();

	// 抽签
	void speechDraw();

	// 比赛
	void speechContest();

	// 显示得分
	void showScore();

	// 保存记录
	void saveRecord();

	// 读取记录
	void loadRecord();

	// 判断文件是否为空
	bool fileIsEmpty;

	// 存放往届记录
	map<int, vector<string>>m_Record;

	// 显示往届记录
	void showRecord();

	// 清空记录
	void clearRecord();

	//析构函数
	~SpeechManager();

	// 成员属性
	vector<int> v1; // 保存第一轮比赛选手编号容器

	vector<int> v2; // 第一轮晋级选手编号容器

	vector<int> victory; // 胜出前三名选手编号容器

	map<int, Speaker> m_Speaker; // 存放编号以及对应具体选手容器

	int m_Index; // 存放比赛轮数

};